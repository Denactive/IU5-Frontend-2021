{"version":3,"sources":["Context.js","List/ListItem.js","List/AddButton.js","List/List.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","ListItem","task","useState","title","useContext","Change","delTask","classes","done","push","className","type","checked","onChange","id","join","value","onClick","bind","AddBut","AddTask","SetValue","onSubmit","event","preventDefault","trim","placeholder","target","MyList","props","listItems","tasks","map","App","setTasks","Provider","i","console","log","filter","x","el","concat","Date","now","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAGeA,G,MADCC,IAAMC,iB,OCCP,SAASC,EAAT,GAAmD,IAA/BC,EAA8B,EAA9BA,KAC/B,EAAgCH,IAAMI,SAASD,EAAKE,OAApD,mBACA,GADA,UAC0BC,qBAAWP,IAArC,mBAAOQ,EAAP,KAAeC,EAAf,KACMC,EAAU,GAGhB,OAFIN,EAAKO,MACLD,EAAQE,KAAK,QAEf,sBAAKC,UAAU,YAAf,UACE,uBAAOC,KAAK,WAAWD,UAAU,gBAAgBE,QAASX,EAAKO,KAAMK,SAAU,kBAAMR,EAAOJ,EAAKa,OACjG,sBAAMJ,UAAWH,EAAQQ,KAAK,KAAMJ,KAAK,OAAOK,MAAOf,EAAKE,MAA5D,SAAoEF,EAAKE,QACzE,wBAAQO,UAAU,eAAeO,QAASX,EAAQY,KAAK,KAAMjB,EAAKa,IAAlE,kBCXO,SAASK,EAAT,GAA4B,IAAXC,EAAU,EAAVA,QAC5B,EAA0BlB,mBAAS,IAAnC,mBAAOc,EAAP,KAAcK,EAAd,KACA,OACI,uBAAMX,UAAU,aAAaY,SAAU,SAACC,GACpCA,EAAMC,iBACFR,EAAMS,QACVL,EAAQJ,GACRK,EAAS,KAJb,UAMI,uBAAOV,KAAK,OAAOe,YAAY,WAAWV,MAAOA,EAAOH,SAAU,SAAAU,GAAK,OACvEF,EAASE,EAAMI,OAAOX,UACtB,wBAAQL,KAAK,SAAb,yBCRG,SAASiB,EAAOC,GAC3B,IAAMC,EAAYD,EAAME,MACxB,OACE,sBAAKrB,UAAU,OAAf,UACE,oBAAIA,UAAU,2BAAd,iFAECoB,EAAUE,KAAI,SAAC/B,GAAD,OACX,cAACD,EAAD,CAAUC,KAAMA,GAAWA,EAAKa,OAEpC,cAACK,EAAD,CAAQC,QAASS,EAAMT,aCoChBa,MA5Cf,WACE,MAA0BnC,IAAMI,SAAS,IAAzC,mBAAO6B,EAAP,KAAcG,EAAd,KA4BA,OACE,cAAC,EAAQC,SAAT,CAAkBnB,MAAO,CA3B3B,SAAkBoB,GAChBC,QAAQC,IAAI,gBAAkBF,GAC9BF,EACEH,EAAMC,KAAI,SAAA/B,GAGR,OAFIA,EAAKa,KAAOsB,IACdnC,EAAKO,MAAQP,EAAKO,MACbP,OAKb,SAAiBmC,GACfF,EACEH,EAAMQ,QAAO,SAAAC,GAAC,OAAIA,EAAE1B,KAAOsB,QAc7B,SACE,qBAAK1B,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAACkB,EAAD,CAAQG,MAAOA,EAAOX,QAb9B,SAAiBqB,GACfP,EACEH,EAAMW,OAAO,CAAC,CACZvC,MAAOsC,EACP3B,GAAI6B,KAAKC,MACTpC,MAAM,SASJ,kEC5BKqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0f6227b5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Context = React.createContext()\r\nexport default Context","import React, { useContext } from 'react'\r\nimport Context from '../Context'\r\n\r\nexport default function ListItem({ task, /*Change, /*delTask*/}) {\r\n    const [todoInput, setTodoInput]=React.useState(task.title);\r\n    const [Change, delTask] = useContext(Context)\r\n    const classes = [];\r\n    if (task.done)\r\n        classes.push('done')\r\n    return (\r\n      <div className=\"list-item\">\r\n        <input type=\"checkbox\" className=\"list-checkbox\" checked={task.done} onChange={() => Change(task.id)}/>\r\n        <span className={classes.join(' ')} type=\"text\" value={task.title}>{task.title}</span>\r\n        <button className=\"list-del-btn\" onClick={delTask.bind(null, task.id)}>X</button>\r\n      </div>\r\n    );\r\n  }","import React, { useDebugValue, useState } from 'react'\r\n\r\nexport default function AddBut({AddTask}) {\r\n    const [value, SetValue] = useState('');\r\n    return (\r\n        <form className='enter-item' onSubmit={(event) => {\r\n            event.preventDefault();\r\n            if (value.trim())\r\n            AddTask(value);\r\n            SetValue('');\r\n        }}>\r\n            <input type=\"text\" placeholder=\"new task\" value={value} onChange={event => \r\n            SetValue(event.target.value)} />\r\n            <button type=\"submit\">\r\n                Add Task\r\n            </button>\r\n        </form>\r\n    );\r\n}","import React from 'react'\r\n\r\nimport ListItem from './ListItem'\r\nimport AddBut from './AddButton'\r\n\r\nexport default function MyList(props) {\r\n    const listItems = props.tasks;\r\n    return (\r\n      <div className=\"list\" >\r\n        <h1 className=\" text-align-center w-100\">Список задач</h1>\r\n        \r\n        {listItems.map((task) =>\r\n            <ListItem task={task} key={task.id}/>\r\n        )}\r\n        <AddBut AddTask={props.AddTask}/>\r\n      </div> \r\n    );\r\n}\r\n","import React from 'react'\r\nimport './App.css'\r\nimport Context from './Context'\r\n\r\nimport MyList from './List/List.js';\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = React.useState([])\r\n  \r\n  function CrossOut(i) {\r\n    console.log(\"crossing out \" + i);\r\n    setTasks (\r\n      tasks.map(task => {\r\n        if (task.id === i)\r\n          task.done = !task.done;\r\n        return task;\r\n      })\r\n    )\r\n  }\r\n\r\n  function delTask(i){\r\n    setTasks (\r\n      tasks.filter(x => x.id !== i)\r\n    );\r\n  }\r\n\r\n  function AddTask(el) {\r\n    setTasks(\r\n      tasks.concat([{\r\n        title: el,\r\n        id: Date.now(),\r\n        done: false\r\n      }]))\r\n  }\r\n\r\n  return (\r\n    <Context.Provider value={[CrossOut, delTask]}>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <MyList tasks={tasks} AddTask={AddTask}/>\r\n          <footer>\r\n          Turchin Denis IU5-45\r\n          </footer>\r\n        </header>\r\n        \r\n      </div>\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}