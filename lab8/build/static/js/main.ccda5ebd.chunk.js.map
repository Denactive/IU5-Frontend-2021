{"version":3,"sources":["Context.js","List/ListItem.js","List/AddButton.js","List/List.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","ListItem","task","useState","title","useContext","Change","Rename","delTask","classes","done","push","className","type","checked","onChange","id","join","value","event","target","onClick","bind","AddBut","AddTask","SetValue","onSubmit","preventDefault","trim","placeholder","MyList","props","listItems","tasks","map","App","setTasks","Provider","i","console","log","filter","x","el","concat","Date","now","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAGeA,G,MADCC,IAAMC,iB,OCCP,SAASC,EAAT,GAA2B,IAARC,EAAO,EAAPA,KAC9B,EAAgCH,IAAMI,SAASD,EAAKE,OAApD,mBACA,GADA,UACkCC,qBAAWP,IAA7C,mBAAOQ,EAAP,KAAeC,EAAf,KAAuBC,EAAvB,KACMC,EAAU,CAAC,mBAKjB,OAJIP,EAAKQ,KACPD,EAAQE,KAAK,QAEbF,EAAQE,KAAK,UAEb,sBAAKC,UAAU,YAAf,UACE,uBAAOC,KAAK,WAAWD,UAAU,gBAAgBE,QAASZ,EAAKQ,KAAMK,SAAU,kBAAMT,EAAOJ,EAAKc,OACjG,uBAAOJ,UAAWH,EAAQQ,KAAK,KAAMJ,KAAK,OAAOK,MAAOhB,EAAKE,MAAOW,SAAU,SAACI,GAAD,OAC5EZ,EAAOL,EAAKc,GAAIG,EAAMC,OAAOF,UAE/B,wBAAQN,UAAU,eAAeS,QAASb,EAAQc,KAAK,KAAMpB,EAAKc,IAAlE,kBCfO,SAASO,EAAT,GAA4B,IAAXC,EAAU,EAAVA,QAC5B,EAA0BrB,mBAAS,IAAnC,mBAAOe,EAAP,KAAcO,EAAd,KACA,OACI,uBAAMb,UAAU,aAAac,SAAU,SAACP,GACpCA,EAAMQ,iBACFT,EAAMU,QACVJ,EAAQN,GACRO,EAAS,KAJb,UAMI,uBAAOZ,KAAK,OAAOgB,YAAY,WAAWX,MAAOA,EAAOH,SAAU,SAAAI,GAAK,OACvEM,EAASN,EAAMC,OAAOF,UACtB,wBAAQL,KAAK,SAAb,yBCRG,SAASiB,EAAOC,GAC3B,IAAMC,EAAYD,EAAME,MACxB,OACE,sBAAKrB,UAAU,OAAf,UACE,oBAAIA,UAAU,0BAAd,iFACA,cAACW,EAAD,CAAQC,QAASO,EAAMP,UACtBQ,EAAUE,KAAI,SAAChC,GAAD,OACX,cAACD,EAAD,CAAUC,KAAMA,GAAWA,EAAKc,UC8C7BmB,MApDf,WACE,MAA0BpC,IAAMI,SAAS,IAAzC,mBAAO8B,EAAP,KAAcG,EAAd,KAuCA,OACE,cAAC,EAAQC,SAAT,CAAkBnB,MAAO,CAtC3B,SAAkBoB,GAChBC,QAAQC,IAAI,gBAAkBF,GAC9BF,EACEH,EAAMC,KAAI,SAAAhC,GAGR,OAFIA,EAAKc,KAAOsB,IACdpC,EAAKQ,MAAQR,EAAKQ,MACbR,OAoBb,SAAoBoC,EAAGpB,GACrBqB,QAAQC,IAAI,YAAcF,GAC1BF,EACEH,EAAMC,KAAI,SAAAhC,GAGR,OAFIA,EAAKc,KAAOsB,IACdpC,EAAKE,MAAQc,GACRhB,OArBb,SAAiBoC,GACfF,EACEH,EAAMQ,QAAO,SAAAC,GAAC,OAAIA,EAAE1B,KAAOsB,QAyB7B,SACE,sBAAK1B,UAAU,SAAf,UACI,cAACkB,EAAD,CAAQG,MAAOA,EAAOT,QAvB9B,SAAiBmB,GACfP,EACEH,EAAMW,OAAO,CAAC,CACZxC,MAAOuC,EACP3B,GAAI6B,KAAKC,MACTpC,MAAM,SAmBJ,gECtCKqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.ccda5ebd.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Context = React.createContext()\r\nexport default Context","import React, { useContext } from 'react'\r\nimport Context from '../Context'\r\n\r\nexport default function ListItem({task}) {\r\n    const [todoInput, setTodoInput]=React.useState(task.title);\r\n    const [Change, Rename, delTask] = useContext(Context)\r\n    const classes = [\"list-item-field\"];\r\n    if (task.done)\r\n      classes.push('done')\r\n    else\r\n      classes.push('active')\r\n    return (\r\n      <div className=\"list-item\">\r\n        <input type=\"checkbox\" className=\"list-checkbox\" checked={task.done} onChange={() => Change(task.id)}/>\r\n        <input className={classes.join(' ')} type=\"text\" value={task.title} onChange={(event) =>\r\n          Rename(task.id, event.target.value)\r\n        }/>\r\n        <button className=\"list-del-btn\" onClick={delTask.bind(null, task.id)}>X</button>\r\n      </div>\r\n    );\r\n  }","    import React, { useDebugValue, useState } from 'react'\r\n\r\nexport default function AddBut({AddTask}) {\r\n    const [value, SetValue] = useState('');\r\n    return (\r\n        <form className='enter-item' onSubmit={(event) => {\r\n            event.preventDefault();\r\n            if (value.trim())\r\n            AddTask(value);\r\n            SetValue('');\r\n        }}>\r\n            <input type=\"text\" placeholder=\"new task\" value={value} onChange={event => \r\n            SetValue(event.target.value)} />\r\n            <button type=\"submit\">\r\n                Add Task\r\n            </button>\r\n        </form>\r\n    );\r\n}","import React from 'react'\r\n\r\nimport ListItem from './ListItem'\r\nimport AddBut from './AddButton'\r\n\r\nexport default function MyList(props) {\r\n    const listItems = props.tasks;\r\n    return (\r\n      <div className=\"list\" >\r\n        <h1 className=\"text-align-center w-100\">Список задач</h1>\r\n        <AddBut AddTask={props.AddTask}/>\r\n        {listItems.map((task) =>\r\n            <ListItem task={task} key={task.id}/>\r\n        )}\r\n        \r\n      </div> \r\n    );\r\n}\r\n","import React from 'react'\r\nimport './App.css'\r\nimport Context from './Context'\r\n\r\nimport MyList from './List/List.js';\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = React.useState([])\r\n  \r\n  function CrossOut(i) {\r\n    console.log(\"crossing out \" + i);\r\n    setTasks (\r\n      tasks.map(task => {\r\n        if (task.id === i)\r\n          task.done = !task.done;\r\n        return task;\r\n      })\r\n    )\r\n  }\r\n\r\n  function delTask(i) {\r\n    setTasks (\r\n      tasks.filter(x => x.id !== i)\r\n    );\r\n  }\r\n\r\n  function AddTask(el) {\r\n    setTasks(\r\n      tasks.concat([{\r\n        title: el,\r\n        id: Date.now(),\r\n        done: false\r\n      }]))\r\n  }\r\n\r\n  function RenameTask(i, value) {\r\n    console.log(\"Renaming \" + i);\r\n    setTasks (\r\n      tasks.map(task => {\r\n        if (task.id === i)\r\n          task.title = value;\r\n        return task;\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Context.Provider value={[CrossOut, RenameTask, delTask]}>\r\n      <div className=\"bg-img\">\r\n          <MyList tasks={tasks} AddTask={AddTask}/>\r\n          <footer>\r\n          Turchin Denis IU5-45\r\n          </footer>\r\n      </div>\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}